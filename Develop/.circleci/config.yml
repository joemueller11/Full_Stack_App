# This config was automatically generated from your source code
# Stacks detected: deps:node:Develop
version: 2.1
orbs:
  node: circleci/node@5
jobs:
  test-node:
    # Install node dependencies and run tests
    executor: node/default
    working_directory: ~/project/Develop
    steps:
      - checkout:
          path: ~/project
      # Install Xvfb for running Cypress tests
      - run:
          name: Install Xvfb
          command: |
            sudo apt-get update
            sudo apt-get install -y xvfb libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth
      # Start Xvfb before running tests
      - run:
          name: Start Xvfb
          command: Xvfb :99 -screen 0 1280x1024x24 &
          background: true
      # Set display for Cypress
      - run:
          name: Set display environment variable
          command: echo 'export DISPLAY=:99' >> $BASH_ENV
      - node/install-packages:
          cache-path: ~/project/node_modules
          override-ci-command: npm install
      - run:
          name: Run tests
          command: npm test --passWithNoTests
  build-node:
    # Build node project
    executor: node/default
    working_directory: ~/project/Develop
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          cache-path: ~/project/node_modules
          override-ci-command: npm install
      - run:
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      # Copy output to artifacts dir
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build
  deploy:
    # This is an example deploy job, not actually used by the workflow
    docker:
      - image: cimg/base:stable
    steps:
      # Replace this with steps to deploy to users
      - run:
          name: deploy
          command: '#e.g. ./deploy.sh'
workflows:
  build-and-test:
    jobs:
      - test-node
      - build-node:
          requires:
            - test-node
    # - deploy:
    #     requires:
    #       - build-node
